apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: celery-pv-claim
  labels:
    app: flask-app
spec:
  storageClassName: managed-nfs-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
  labels:
    app: flask-app
spec:
  selector:
    matchLabels:
      app: flask-app
      tier: backend
  replicas: 2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: flask-app
        tier: backend
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: celery-worker
          image: deepnadig/ergo:1.4
          imagePullPolicy: Always
          command: [ 'celery', 'worker', '--workdir=.', '-A', 'celery_worker.celery', '--loglevel=info' ]
          env:
            - name: REDIS_HOST
              value: redis-flask-service
          resources:
            limits:
              cpu: "1000m"
              memory: "768Mi"
          volumeMounts:
            - name: worker-store
              mountPath: /data/worker
      volumes:
        - name: worker-store
          persistentVolumeClaim:
            claimName: celery-pv-claim

