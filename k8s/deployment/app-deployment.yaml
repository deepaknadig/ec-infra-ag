apiVersion: v1
kind: Service
metadata:
  name: fa-service
  labels:
    app: flask-app
  annotations:
    metallb.universe.tf/allow-shared-ip: ergo-application
spec:
  selector:
    app: flask-app
    tier: frontend
  ports:
  - name: flask-app
    protocol: "TCP"
    port: 5000
    targetPort: 5000
  type: LoadBalancer
  loadBalancerIP: 10.10.10.100
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: fa-service
  labels:
    team: frontend
spec:
  selector:
    matchLabels:
      app: flask-app
  endpoints:
  - port: flask-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  labels:
    app: flask-app
spec:
  selector:
    matchLabels:
      app: flask-app
      tier: frontend
  replicas: 2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: flask-app
        tier: frontend
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: flask-app
          image: deepnadig/ergo:1.4
          imagePullPolicy: Always
          env:
            - name: REDIS_HOST
              value: redis-flask-service
          resources:
            limits:
              cpu: "100m"
              memory: "512Mi"
          ports:
            - name: flask-app
              containerPort: 5000
          volumeMounts:
            - name: worker-store
              mountPath: /data/worker
      volumes:
        - name: worker-store
          persistentVolumeClaim:
            claimName: celery-pv-claim
